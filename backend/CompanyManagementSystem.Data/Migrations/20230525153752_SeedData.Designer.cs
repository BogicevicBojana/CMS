// <auto-generated />
using System;
using CompanyManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanyManagementSystem.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230525153752_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.Benefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Benefits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8370),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8380),
                            IsDeleted = false,
                            Name = "Private health insurance"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8400),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8400),
                            IsDeleted = false,
                            Name = "Foreign language lessons"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8410),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8410),
                            IsDeleted = false,
                            Name = "Remote work"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8430),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8430),
                            IsDeleted = false,
                            Name = "Employee learning and advancement"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8450),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8450),
                            IsDeleted = false,
                            Name = "Paid courses and literature for professional development"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8460),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8460),
                            IsDeleted = false,
                            Name = "Additional day off for one year of experience (+1 day)"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8480),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8480),
                            IsDeleted = false,
                            Name = "Additional days off for more than three years of experience (+2 days)"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8490),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8490),
                            IsDeleted = false,
                            Name = "Paid sports activities"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8510),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8510),
                            IsDeleted = false,
                            Name = "Parents day off (+1 day)"
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8530),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8530),
                            IsDeleted = false,
                            Name = "Courses for team-leader positions"
                        });
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8700),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8700),
                            IsDeleted = false,
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8730),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8740),
                            IsDeleted = false,
                            Name = "German"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8750),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8750),
                            IsDeleted = false,
                            Name = "Russian"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8770),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8770),
                            IsDeleted = false,
                            Name = "French"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8780),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8780),
                            IsDeleted = false,
                            Name = "Turkish"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8800),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8800),
                            IsDeleted = false,
                            Name = "Italian"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8810),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8810),
                            IsDeleted = false,
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8830),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8830),
                            IsDeleted = false,
                            Name = "Polish"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8840),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8840),
                            IsDeleted = false,
                            Name = "Dutch"
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8860),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(8860),
                            IsDeleted = false,
                            Name = "Serbian"
                        });
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.PublicHoliday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("PublicHolidays");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.ReligiousHoliday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ReligiousHolidays");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Employee"
                        });
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9010),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9010),
                            IsDeleted = false,
                            Name = "JavaScript"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9030),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9030),
                            IsDeleted = false,
                            Name = "AngularJS"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9040),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9040),
                            IsDeleted = false,
                            Name = "TypeScript"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9060),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9060),
                            IsDeleted = false,
                            Name = "Angular"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9080),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9080),
                            IsDeleted = false,
                            Name = "ReactJS"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9090),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9090),
                            IsDeleted = false,
                            Name = "CSS"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9120),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9120),
                            IsDeleted = false,
                            Name = "Ruby (Ruby on Rails)"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9130),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9130),
                            IsDeleted = false,
                            Name = "Python"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9150),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9150),
                            IsDeleted = false,
                            Name = "Java"
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9160),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9160),
                            IsDeleted = false,
                            Name = "SQL"
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9180),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9180),
                            IsDeleted = false,
                            Name = "PostgreSQL"
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9190),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9190),
                            IsDeleted = false,
                            Name = "MongoDB"
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9210),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9210),
                            IsDeleted = false,
                            Name = "GitHub"
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9220),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9220),
                            IsDeleted = false,
                            Name = "Jira"
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9240),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9240),
                            IsDeleted = false,
                            Name = "Kotlin"
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9250),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9250),
                            IsDeleted = false,
                            Name = "Object C"
                        },
                        new
                        {
                            Id = 17,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9260),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9260),
                            IsDeleted = false,
                            Name = "Swift"
                        },
                        new
                        {
                            Id = 18,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9280),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9280),
                            IsDeleted = false,
                            Name = "Xmpp"
                        },
                        new
                        {
                            Id = 19,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9290),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9290),
                            IsDeleted = false,
                            Name = "Flutter"
                        },
                        new
                        {
                            Id = 20,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9310),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9310),
                            IsDeleted = false,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 21,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9320),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9320),
                            IsDeleted = false,
                            Name = "C"
                        },
                        new
                        {
                            Id = 22,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9340),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9340),
                            IsDeleted = false,
                            Name = "C++"
                        },
                        new
                        {
                            Id = 23,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9350),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9350),
                            IsDeleted = false,
                            Name = "Haskell"
                        },
                        new
                        {
                            Id = 24,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9370),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9370),
                            IsDeleted = false,
                            Name = "Hardware Design / Embedded"
                        },
                        new
                        {
                            Id = 25,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9400),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9400),
                            IsDeleted = false,
                            Name = "PHP"
                        },
                        new
                        {
                            Id = 26,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9420),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9420),
                            IsDeleted = false,
                            Name = "Dart"
                        },
                        new
                        {
                            Id = 27,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9430),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9430),
                            IsDeleted = false,
                            Name = "Selenium"
                        },
                        new
                        {
                            Id = 28,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9440),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9440),
                            IsDeleted = false,
                            Name = "Appium"
                        },
                        new
                        {
                            Id = 29,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9460),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9460),
                            IsDeleted = false,
                            Name = "TestNG"
                        },
                        new
                        {
                            Id = 30,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9470),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9470),
                            IsDeleted = false,
                            Name = "xUnit"
                        });
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("EmploymentDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FreeDays")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkingPositionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.HasIndex("WorkingPositionId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Vojvode Putnika 34",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(2000, 2, 1),
                            Email = "nikola.nikolic@gmail.com",
                            EmploymentDate = new DateOnly(2022, 1, 1),
                            FirstName = "Nikola",
                            FreeDays = 14,
                            IsDeleted = false,
                            LastName = "Nikolić",
                            MobileNumber = "0601112233",
                            RoleId = 1,
                            StatusId = 1,
                            WorkingPositionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Heroja Maričića 12",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(2000, 5, 17),
                            Email = "jovan.jovanovic@gmail.com",
                            EmploymentDate = new DateOnly(2020, 12, 20),
                            FirstName = "Jovan",
                            FreeDays = 7,
                            IsDeleted = false,
                            LastName = "Jovanović",
                            MobileNumber = "0601112222",
                            RoleId = 1,
                            StatusId = 1,
                            WorkingPositionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "Zlatarska BB",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1988, 2, 1),
                            Email = "jelena.matic@gmail.com",
                            EmploymentDate = new DateOnly(2012, 1, 1),
                            FirstName = "Jelena",
                            FreeDays = 13,
                            IsDeleted = false,
                            LastName = "Matić",
                            MobileNumber = "0612233234",
                            RoleId = 2,
                            StatusId = 1,
                            WorkingPositionId = 2
                        },
                        new
                        {
                            Id = 4,
                            Address = "Svetozara Markovića 21",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1998, 2, 13),
                            Email = "stefan.jovanovic@gmail.com",
                            EmploymentDate = new DateOnly(2018, 3, 17),
                            FirstName = "Stefan",
                            FreeDays = 17,
                            IsDeleted = false,
                            LastName = "Jovanović",
                            MobileNumber = "0667811223",
                            RoleId = 2,
                            StatusId = 1,
                            WorkingPositionId = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "Beogradska 117",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(2000, 2, 13),
                            Email = "nemanja.novakovic@gmail.com",
                            EmploymentDate = new DateOnly(2017, 1, 1),
                            FirstName = "Nemanja",
                            FreeDays = 20,
                            IsDeleted = false,
                            LastName = "Novaković",
                            MobileNumber = "0652221112",
                            RoleId = 2,
                            StatusId = 2,
                            WorkingPositionId = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "Cara Dušana 12",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1999, 5, 19),
                            Email = "jovana.nikolic@gmail.com",
                            EmploymentDate = new DateOnly(2016, 10, 1),
                            FirstName = "Jovana",
                            FreeDays = 15,
                            IsDeleted = false,
                            LastName = "Nikolić",
                            MobileNumber = "0630001123",
                            RoleId = 2,
                            StatusId = 1,
                            WorkingPositionId = 2
                        },
                        new
                        {
                            Id = 7,
                            Address = "Cara Lazara 92",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1995, 8, 14),
                            Email = "vladimir.vasic@gmail.com",
                            EmploymentDate = new DateOnly(2013, 7, 1),
                            FirstName = "Vladimir",
                            FreeDays = 20,
                            IsDeleted = false,
                            LastName = "Vasić",
                            MobileNumber = "0645566123",
                            RoleId = 2,
                            StatusId = 1,
                            WorkingPositionId = 1
                        },
                        new
                        {
                            Id = 8,
                            Address = "Vojvode Stepe 51",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1997, 2, 1),
                            Email = "jakov.jovic@gmail.com",
                            EmploymentDate = new DateOnly(2014, 1, 1),
                            FirstName = "Jakov",
                            FreeDays = 10,
                            IsDeleted = false,
                            LastName = "Jović",
                            MobileNumber = "0665647999",
                            RoleId = 1,
                            StatusId = 2,
                            WorkingPositionId = 2
                        },
                        new
                        {
                            Id = 9,
                            Address = "Stefana Prvovenčanog 45",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1990, 4, 15),
                            Email = "natasa.lotic@gmail.com",
                            EmploymentDate = new DateOnly(2012, 1, 1),
                            FirstName = "Nataša",
                            FreeDays = 20,
                            IsDeleted = false,
                            LastName = "Lotić",
                            MobileNumber = "0667800123",
                            RoleId = 1,
                            StatusId = 1,
                            WorkingPositionId = 1
                        },
                        new
                        {
                            Id = 10,
                            Address = "Dositejeva 41",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1975, 2, 14),
                            Email = "nikola.stefanovic@gmail.com",
                            EmploymentDate = new DateOnly(2010, 1, 1),
                            FirstName = "Nikola",
                            FreeDays = 17,
                            IsDeleted = false,
                            LastName = "Stefanović",
                            MobileNumber = "0656661123",
                            RoleId = 2,
                            StatusId = 1,
                            WorkingPositionId = 2
                        },
                        new
                        {
                            Id = 11,
                            Address = "Cara Lazara 17",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1995, 5, 19),
                            Email = "petar.petrovic@gmail.com",
                            EmploymentDate = new DateOnly(2021, 1, 1),
                            FirstName = "Petar",
                            FreeDays = 20,
                            IsDeleted = false,
                            LastName = "Petrović",
                            MobileNumber = "0617788931",
                            RoleId = 2,
                            StatusId = 1,
                            WorkingPositionId = 1
                        },
                        new
                        {
                            Id = 12,
                            Address = "Vojvode Mišića 31",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1996, 5, 22),
                            Email = "nevena.matijevic@gmail.com",
                            EmploymentDate = new DateOnly(2019, 1, 1),
                            FirstName = "Nevena",
                            FreeDays = 20,
                            IsDeleted = false,
                            LastName = "Matijević",
                            MobileNumber = "0645412345",
                            RoleId = 2,
                            StatusId = 2,
                            WorkingPositionId = 1
                        },
                        new
                        {
                            Id = 13,
                            Address = "Dimitrija Tucovića 45",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1978, 8, 15),
                            Email = "milos.milosevic@gmail.com",
                            EmploymentDate = new DateOnly(2012, 1, 1),
                            FirstName = "Miloš",
                            FreeDays = 20,
                            IsDeleted = false,
                            LastName = "Milošević",
                            MobileNumber = "0656612342",
                            RoleId = 2,
                            StatusId = 1,
                            WorkingPositionId = 1
                        },
                        new
                        {
                            Id = 14,
                            Address = "Sinđelićeva 21",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateOnly(1997, 10, 2),
                            Email = "jana.petrovic@gmail.com",
                            EmploymentDate = new DateOnly(2020, 5, 1),
                            FirstName = "Jana",
                            FreeDays = 20,
                            IsDeleted = false,
                            LastName = "Petrović",
                            MobileNumber = "0641237634",
                            RoleId = 1,
                            StatusId = 2,
                            WorkingPositionId = 1
                        });
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.UserBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BenefitId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BenefitId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBenefits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BenefitId = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BenefitId = 5,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            BenefitId = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            BenefitId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            BenefitId = 7,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            BenefitId = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            BenefitId = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            BenefitId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            BenefitId = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        },
                        new
                        {
                            Id = 10,
                            BenefitId = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            BenefitId = 4,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 6
                        },
                        new
                        {
                            Id = 12,
                            BenefitId = 7,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 6
                        },
                        new
                        {
                            Id = 13,
                            BenefitId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            BenefitId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            BenefitId = 4,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 8
                        },
                        new
                        {
                            Id = 16,
                            BenefitId = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 8
                        },
                        new
                        {
                            Id = 17,
                            BenefitId = 5,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 9
                        },
                        new
                        {
                            Id = 18,
                            BenefitId = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 9
                        },
                        new
                        {
                            Id = 19,
                            BenefitId = 4,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 10
                        },
                        new
                        {
                            Id = 20,
                            BenefitId = 7,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 10
                        },
                        new
                        {
                            Id = 21,
                            BenefitId = 4,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 11
                        },
                        new
                        {
                            Id = 22,
                            BenefitId = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 11
                        },
                        new
                        {
                            Id = 23,
                            BenefitId = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 12
                        },
                        new
                        {
                            Id = 24,
                            BenefitId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 12
                        },
                        new
                        {
                            Id = 25,
                            BenefitId = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 13
                        },
                        new
                        {
                            Id = 26,
                            BenefitId = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 13
                        },
                        new
                        {
                            Id = 27,
                            BenefitId = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 14
                        },
                        new
                        {
                            Id = 28,
                            BenefitId = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 14
                        });
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.UserLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("UserId");

                    b.ToTable("UserLanguages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 9,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 9,
                            UserId = 5
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 8,
                            UserId = 6
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 7,
                            UserId = 8
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 1,
                            UserId = 9
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 9,
                            UserId = 10
                        },
                        new
                        {
                            Id = 17,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 18,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 19,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 1,
                            UserId = 11
                        },
                        new
                        {
                            Id = 20,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 3,
                            UserId = 11
                        },
                        new
                        {
                            Id = 21,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 8,
                            UserId = 11
                        },
                        new
                        {
                            Id = 22,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 4,
                            UserId = 12
                        },
                        new
                        {
                            Id = 23,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 2,
                            UserId = 12
                        },
                        new
                        {
                            Id = 24,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 1,
                            UserId = 12
                        },
                        new
                        {
                            Id = 25,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 7,
                            UserId = 13
                        },
                        new
                        {
                            Id = 26,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 3,
                            UserId = 13
                        },
                        new
                        {
                            Id = 27,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 2,
                            UserId = 14
                        },
                        new
                        {
                            Id = 28,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LanguageId = 9,
                            UserId = 14
                        });
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.UserReligiousHoliday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ReligiousHolidayId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReligiousHolidayId");

                    b.HasIndex("UserId");

                    b.ToTable("UserReligiousHolidays");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.UserSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSkills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 16,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 20,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 7,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 28,
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 13,
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 22,
                            UserId = 5
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 13,
                            UserId = 5
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 11,
                            UserId = 6
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 21,
                            UserId = 7
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 8,
                            UserId = 8
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 28,
                            UserId = 8
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 5,
                            UserId = 8
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 23,
                            UserId = 9
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 8,
                            UserId = 9
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 3,
                            UserId = 10
                        },
                        new
                        {
                            Id = 17,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 16,
                            UserId = 11
                        },
                        new
                        {
                            Id = 18,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 26,
                            UserId = 11
                        },
                        new
                        {
                            Id = 19,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 21,
                            UserId = 11
                        },
                        new
                        {
                            Id = 20,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 21,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 22,
                            UserId = 12
                        },
                        new
                        {
                            Id = 22,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 15,
                            UserId = 12
                        },
                        new
                        {
                            Id = 23,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 22,
                            UserId = 13
                        },
                        new
                        {
                            Id = 24,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 20,
                            UserId = 13
                        },
                        new
                        {
                            Id = 25,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 20,
                            UserId = 13
                        },
                        new
                        {
                            Id = 26,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SkillId = 1,
                            UserId = 14
                        });
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.UserStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Inactive"
                        });
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vacations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 6, 4),
                            StartDate = new DateOnly(2023, 6, 3),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 4, 17),
                            StartDate = new DateOnly(2023, 4, 15),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 9, 10),
                            StartDate = new DateOnly(2023, 9, 8),
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 2, 27),
                            StartDate = new DateOnly(2023, 2, 24),
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 8, 15),
                            StartDate = new DateOnly(2023, 8, 13),
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 7, 8),
                            StartDate = new DateOnly(2023, 7, 7),
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 4, 3),
                            StartDate = new DateOnly(2023, 4, 1),
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 10, 24),
                            StartDate = new DateOnly(2023, 10, 21),
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 8, 17),
                            StartDate = new DateOnly(2023, 8, 16),
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 11, 4),
                            StartDate = new DateOnly(2023, 11, 3),
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 3, 4),
                            StartDate = new DateOnly(2023, 3, 1),
                            UserId = 5
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 11, 17),
                            StartDate = new DateOnly(2023, 11, 14),
                            UserId = 6
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 10, 21),
                            StartDate = new DateOnly(2023, 10, 18),
                            UserId = 6
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 6, 15),
                            StartDate = new DateOnly(2023, 6, 14),
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 7, 21),
                            StartDate = new DateOnly(2023, 7, 18),
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 3, 25),
                            StartDate = new DateOnly(2023, 3, 23),
                            UserId = 8
                        },
                        new
                        {
                            Id = 17,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 3, 10),
                            StartDate = new DateOnly(2023, 3, 7),
                            UserId = 9
                        },
                        new
                        {
                            Id = 18,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 5, 8),
                            StartDate = new DateOnly(2023, 5, 5),
                            UserId = 9
                        },
                        new
                        {
                            Id = 19,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 10, 7),
                            StartDate = new DateOnly(2023, 10, 5),
                            UserId = 9
                        },
                        new
                        {
                            Id = 20,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 2, 11),
                            StartDate = new DateOnly(2023, 2, 8),
                            UserId = 10
                        },
                        new
                        {
                            Id = 21,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 9, 10),
                            StartDate = new DateOnly(2023, 9, 8),
                            UserId = 10
                        },
                        new
                        {
                            Id = 22,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 10, 14),
                            StartDate = new DateOnly(2023, 10, 13),
                            UserId = 10
                        },
                        new
                        {
                            Id = 23,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 11, 9),
                            StartDate = new DateOnly(2023, 11, 8),
                            UserId = 11
                        },
                        new
                        {
                            Id = 24,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 4, 2),
                            StartDate = new DateOnly(2023, 4, 1),
                            UserId = 11
                        },
                        new
                        {
                            Id = 25,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 9, 4),
                            StartDate = new DateOnly(2023, 9, 3),
                            UserId = 12
                        },
                        new
                        {
                            Id = 26,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 7, 10),
                            StartDate = new DateOnly(2023, 7, 8),
                            UserId = 12
                        },
                        new
                        {
                            Id = 27,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 9, 25),
                            StartDate = new DateOnly(2023, 9, 22),
                            UserId = 13
                        },
                        new
                        {
                            Id = 28,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 3, 9),
                            StartDate = new DateOnly(2023, 3, 6),
                            UserId = 13
                        },
                        new
                        {
                            Id = 29,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateOnly(2023, 9, 22),
                            StartDate = new DateOnly(2023, 9, 19),
                            UserId = 14
                        });
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.WorkingPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WorkingPositions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9830),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9830),
                            IsDeleted = false,
                            Name = "Software developer"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9850),
                            DateModified = new DateTime(2023, 5, 25, 15, 37, 52, 89, DateTimeKind.Utc).AddTicks(9850),
                            IsDeleted = false,
                            Name = "Designer"
                        });
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.User", b =>
                {
                    b.HasOne("CompanyManagementSystem.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyManagementSystem.Data.Entities.UserStatus", "UserStatus")
                        .WithMany("Users")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyManagementSystem.Data.Entities.WorkingPosition", "WorkingPosition")
                        .WithMany("Users")
                        .HasForeignKey("WorkingPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserStatus");

                    b.Navigation("WorkingPosition");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.UserBenefit", b =>
                {
                    b.HasOne("CompanyManagementSystem.Data.Entities.Benefit", "Benefit")
                        .WithMany("UserBenefits")
                        .HasForeignKey("BenefitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyManagementSystem.Data.Entities.User", "User")
                        .WithMany("UserBenefits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benefit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.UserLanguage", b =>
                {
                    b.HasOne("CompanyManagementSystem.Data.Entities.Language", "Language")
                        .WithMany("UserLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyManagementSystem.Data.Entities.User", "User")
                        .WithMany("UserLanguages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.UserReligiousHoliday", b =>
                {
                    b.HasOne("CompanyManagementSystem.Data.Entities.ReligiousHoliday", "ReligiousHoliday")
                        .WithMany("UserReligiousHolidays")
                        .HasForeignKey("ReligiousHolidayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyManagementSystem.Data.Entities.User", "User")
                        .WithMany("UserReligiousHolidays")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReligiousHoliday");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.UserSkill", b =>
                {
                    b.HasOne("CompanyManagementSystem.Data.Entities.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyManagementSystem.Data.Entities.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.Vacation", b =>
                {
                    b.HasOne("CompanyManagementSystem.Data.Entities.User", "User")
                        .WithMany("Vacations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.Benefit", b =>
                {
                    b.Navigation("UserBenefits");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.Language", b =>
                {
                    b.Navigation("UserLanguages");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.ReligiousHoliday", b =>
                {
                    b.Navigation("UserReligiousHolidays");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.Skill", b =>
                {
                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.User", b =>
                {
                    b.Navigation("UserBenefits");

                    b.Navigation("UserLanguages");

                    b.Navigation("UserReligiousHolidays");

                    b.Navigation("UserSkills");

                    b.Navigation("Vacations");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.UserStatus", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CompanyManagementSystem.Data.Entities.WorkingPosition", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
